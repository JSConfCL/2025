---
import { Icon } from 'astro-icon/components'
---
<div class="circle-menu">
  <div class="overlay"></div>
  <div class="menu circle">
    <div class="icon">
      <span></span>
      <span></span>
      <span></span>
    </div>
  </div>

  <span class="circle">
    <a class="social-link" href="/" rel="noopener noreferrer" target="_blank">
      <Icon name="e-mail" size={56} />
    </a>
  </span>

  <span class="circle">
    <a class="social-link" href="/" rel="noopener noreferrer" target="_blank">
      <Icon name="linkedin" size={56} />
    </a>
  </span>

  <span class="circle">
    <a class="social-link" href="/" rel="noopener noreferrer" target="_blank">
      <Icon name="instagram" size={56} />
    </a>
  </span>

  <span class="circle">
    <a class="social-link" href="/" rel="noopener noreferrer" target="_blank">
      <Icon name="facebook" size={56} />
    </a>
  </span>

  <span class="circle">
    <a class="social-link" href="/" rel="noopener noreferrer" target="_blank">
      <Icon name="x" size={56} />
    </a>
  </span>

  <span class="circle">
    <a class="social-link" href="/" rel="noopener noreferrer" target="_blank">
      <Icon name="github" size={56} />
    </a>
  </span>
</div>

<script>
const menu = document.querySelector<HTMLDivElement>('.circle-menu')
const items = menu?.querySelectorAll<HTMLSpanElement>('span.circle') ?? []

menu?.style?.setProperty('--max-items', `${items.length}`)

document.querySelector('.menu')?.addEventListener('click', () => menu?.classList?.toggle('open'))
items.forEach((el, index) => el.style.setProperty('--item', `${index}`))
</script>

<style>
  :root {
    --menu-size: 60px;
    --menu-icon-size: calc(var(--menu-size) / 2);
    --menu-color-bg: var(--amber-500);
    --menu-color-fg: var(--body-color);

    --item-size: calc(var(--menu-size) * 0.9);
    --item-color-bg: var(--black);
    --item-color-fg: var(--white);
    --item-distance: calc(var(--item-size) * 1.2);
    --item-timing: ease-in-out;
  }

  .social-link {
    width: fit-content;
    height: fit-content;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .circle-menu {
    position: fixed;
    bottom: 3rem;
    right: 3rem;
    display: grid;
    place-items: center;
    z-index: 1;

    .circle {
      border-radius: 50%;
      box-shadow: 0 6px 50px 0 #FBBF2480; /* Nuevo valor de brillo */
    }

    .menu {
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      width: var(--menu-size);
      height: var(--menu-size);
      color: var(--black);
      background-color: var(--menu-color-bg);
      transition: scale 0.5s, background 0.3s;
      position: absolute;
      z-index: 3;

      & .icon {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        width: var(--menu-icon-size);
        height: var(--menu-icon-size);

        & span {
          width: 100%;
          height: 5px;
          background: currentcolor;
          transition: transform 0.3s, color 0.3s;

          &:nth-child(1),
          &:nth-child(3) {
            transform-origin: 0% 50%;
          }

          &:nth-child(2) {
            transform-origin: 50% 50%;
          }
        }
      }
    }

    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgb(from var(--black) r g b / 0.5);
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.3s;
      z-index: 1;
    }

    @media (max-width: 393px) {
      .overlay {
        backdrop-filter: blur(5px);
      }
    }

    &.open .overlay {
      opacity: 1;
      pointer-events: all;
    }

    & > span {
      --y: calc(var(--item) * var(--item-distance) + 60px); /* Elevar iconos */
      --delay: calc(var(--item) * 0.1s);

      cursor: pointer;
      position: absolute;
      pointer-events: none;
      width: var(--item-size);
      height: var(--item-size);
      color: var(--item-color-fg);
      background-color: var(--item-color-bg);
      border: 1px solid var(--menu-color-bg);
      transform: scale(0) translateY(0);
      transition: transform 0.3s var(--item-timing) var(--delay), background 0.3s;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2;

      & svg {
        position: relative;
        transform: translate(-1%, 3%);
        width: calc(var(--item-size) / 2.25);
        height: calc(var(--item-size) / 2.25);
      }

      &:hover {
        background-color: var(--menu-color-bg); /* Diferente tono de dorado */
      }
    }

    &.open {
      & .menu {
        scale: 0.8;

        & span {
          &:nth-child(1) {
            transform: translateX(22%) rotate(45deg) translateX(-11%);
          }

          &:nth-child(2) {
            transform: scale(0, 1);
          }

          &:nth-child(3) {
            transform: translateX(22%) rotate(-45deg) translateX(-11%);
          }
        }
      }

      & > span {
        pointer-events: all;
        transform: scale(1) translateY(calc(-1 * var(--y)));
      }
    }
  }
</style>
