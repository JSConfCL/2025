---
import type { ImageMetadata } from 'astro'
import parallaxImages from '@data/parallax-images'
import ClickToScroll from '@ui/ClickToScroll.astro'
import Countdown from '@ui/Countdown.astro'
import { Picture } from 'astro:assets'

const getImages = import.meta.glob<{ default: ImageMetadata }>(
  '/src/images/parallax/*.{jpeg,jpg,png}'
);
---

<section class="parallax-container">
  <div class="information">
    <h2>La cuenta regresiva ha comenzado</h2>
    <Countdown />
  </div>
  <ClickToScroll href="#" title="Haz scroll y explora lo que te espera" />
  <div class="layers">
    {
      parallaxImages.map(({ alt, src }, index) => (
        <Picture
          alt={alt}
          class={`parallax capa-${index}`}
          fetchpriority="low"
          formats={['avif', 'webp']}
          height={767}
          src={getImages[src]()}
          width={1146}
        />
      ))
    }

  </div>
</section>

<style>
  .parallax-container {
    max-width: 1146px;
    margin: auto;
    padding-block: 98px;
    padding-inline: 16px;
    text-align: center;
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 24px;

    @media (width >= 1200px) {
      padding-block: 260px 230px;
      gap: 0px;
    }

    .information {
      display: flex;
      flex-direction: column;
      gap: 24px;

      @media (width >= 1200px) {
        position: relative;
        z-index: 1;
        padding-bottom: 260px;
      }

      h2 {
        font-size: 28px;
        font-weight: 600;
        text-wrap: balance;
        margin: 0;

        @media (width >= 1200px) {
          font-size: 48px;
        }
      }
    }

    .layers {
      position: relative;
      aspect-ratio: 1146/767;

      @media (width >= 1200px) {
        aspect-ratio: initial;
        position: initial;
      }

      img {
        position: absolute;
        inset: 0;

        &.capa-0,
        &.capa-2,
        &.capa-3 {
          z-index: -1;
        }

        &.capa-1 {
          z-index: 2;
        }
      }
    }
  }
</style>

<script>
  const isDesktop = window.matchMedia('(min-width: 1200px)').matches

  if (isDesktop) {
    import('@scripts/parallax').then(({ ParallaxEffect }) => {
      return new ParallaxEffect({
        containerSelector: '.parallax-container',
        childsSelector: '.parallax',
        maxDisplacement: 50
      })
    }).catch((err) => console.error(err))
  }
</script>
